apiVersion: v1
kind: Service
metadata:
  name: chatverse-app
  namespace: chatverse
  labels:
    app: chatverse-app
    component: backend
spec:
  selector:
    app: chatverse-app
    component: backend
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatverse-app
  namespace: chatverse
  labels:
    app: chatverse-app
    component: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatverse-app
      component: backend
  template:
    metadata:
      labels:
        app: chatverse-app
        component: backend
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: chatverse-app
          image: ${IMAGE_NAME}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          args: ["--debug"]
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres:5432/chatverse
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgre
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 20
            failureThreshold: 5
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
          resources:
            requests:
              memory: "1Gi"
              cpu: "1000m"
            limits:
              memory: "2Gi"
              cpu: "1"
